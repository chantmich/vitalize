// Haleks â€” Vitalize
// https://haleks.ca
// Licensed under MIT Open Source


// Rotate In
// =========
@import '../../core/global';
@import 'rotating-entrances';

// Class
// -----
$vitalize-include-rotate-in-class: $vitalize-include-rotating-entrances-class !default;

// Properties
// ----------
$vitalize-rotate-in-properties: $vitalize-default-properties !default;
$vitalize-rotate-in-properties: map-extend($vitalize-default-properties, $vitalize-rotate-in-properties);

// Extensions
// ----------
$vitalize-rotate-in-extensions: $vitalize-default-extensions !default;
$vitalize-rotate-in-extensions: map-extend($vitalize-default-extensions, $vitalize-rotate-in-extensions);

// Options
// -------
$vitalize-rotate-in-degree: 200deg !default;
$vitalize-rotate-in-reverse: false !default;

// Rotate In
// ---------
// - The rotate in animation mixins
// - @param map $options
@mixin rotate-in($options: ()) {
	$options: map-extend(('degree': $vitalize-rotate-in-degree, 'reverse': $vitalize-rotate-in-reverse, 'properties': $vitalize-rotate-in-properties, 'extensions': $vitalize-rotate-in-extensions), $options);
	$reverse: map-get($options, 'reverse');
	$degree: if($reverse, map-get($options, 'degree'), -(map-get($options, 'degree')));
	$name: 'rotate-in-#{$degree}-#{$reverse}';

	@include animation-set($name, $options) {
		from {
			transform-origin: center;
			transform: rotate3d(0, 0, 1, $degree);
			opacity: 0;
		}

		to {
			transform-origin: center;
			transform: none;
			opacity: 1;
		}
	}
}

// Export
// ------
@include exports('rotate-in') {
	@if $vitalize-include-rotate-in-class {
		.rotate-in {
			@include rotate-in();
		}

		.rotate-in-reverse {
			@include rotate-in(('reverse': true));
		}
	}
}
